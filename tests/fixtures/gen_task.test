---SUMMARY---
Test fixture for the GENERATE:TASK generator.
---COMMAND---
generate:task --name=Foo
---EXPECTED---
[ File 1 ] APPPATH/classes/Task/Foo.php

<?php defined('SYSPATH') OR die('No direct script access.');
/**
 * Description of Task_Foo.
 *
 * Additional options:
 *
 *   --option1=VALUE1
 *
 *     Description of this option.
 *
 *   --option2=VALUE2
 *
 *     Description of this option.
 *
 * Examples
 * ========
 * minion task --option1=value1
 *
 *     Description of this example.
 *
 * minion task --option1=value1 --option2=value2
 *
 *     Description of this example.
 *
 * @package    package
 * @category   Tasks
 * @author     Test Author
 * @copyright  (c) 2012 Test Author
 * @license    Test license
 */
class Task_Foo extends Minion_Task
{
	/**
	 * @var  array  The task options
	 */
	protected $_options = array(
		'option' => '',
	);

	/**
	 * Validates the task options.
	 *
	 * @param   Validation  $validation  The validation object to add rules to
	 * @return  Validation
	 */
	public function build_validation(Validation $validation)
	{
		return parent::build_validation($validation)
			->rule('option', 'not_empty');
	}

	/**
	 * Executes the task.
	 *
	 * @param   array  $params  The task parameters
	 * @return  void
	 */
	protected function _execute(array $params)
	{
		// Method implementation
	}

} // End Task_Foo
---END---
